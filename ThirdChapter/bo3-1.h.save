// bo3-1.h 顺序栈的基本操作(9个)
void InitStack(SqStack &S)
{
    S.base = (SElemType*)malloc(STACK_INIT_SIZE*sizeof(SElemType));
    if(!S.base)
        exit(OVERFLOW);
    S.top = S.base;
    S.stacksize = STACK_INIT_SIZE;
}

void DestroyStack(SqStack &S)
{
    free(S.base);
    S.top = S.base = NULL;
    S.stacksize = 0;
}

void ClearStack(SqStack &S)
{
    S.top = S.base;
}

Status StackEmpty(SqStack S)
{
    if(S.base == S.top)
        return TRUE;
    return FALSE;
}

int StackLength(SqStack S)
{
    return (S.top - S.base);
}

Status GetTop(SqStack S, SElemType &e)
{
    if(S.top > S.base)
    {
        e = *(S.top - 1);
        return OK;
    }
    return ERROR;
}

void Push(SqStack &S, SElemType e)
{// 先判断是否栈满
    if((S.top - S.base) == S.stacksize)
    {
        S.base = (SElemType*)realloc(S.base,(LIST_INIT_SIZE + LIST_INCREMENT)*sizeof(SElemType));
        if(!S.base)
            exit(OVERFLOW);
        S.
    }

}

Status Pop(SqStack &S, SElemType &e)
{

}

void StackTraverse(SqStack S, void(*visit)(SElemType))
{

}
